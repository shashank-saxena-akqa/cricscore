{"ast":null,"code":"var _jsxFileName = \"/Users/shashank.saxena/Documents/react app/reactfirstproject/src/cric.tsx\";\nimport * as React from 'react';\nconst data = http(\"https://jsonplaceholder.typicode.com/todos\");\n\nfunction Cric() {\n  const name = \"Shashank Saxena\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, name));\n}\n\nexport async function http(request) {\n  const response = await fetch(request);\n  response.parsedBody = await response.json();\n  return response;\n} // example consuming code\n\nconst response = await http(\"https://jsonplaceholder.typicode.com/todos\");\nexport default Cric;","map":{"version":3,"sources":["/Users/shashank.saxena/Documents/react app/reactfirstproject/src/cric.tsx"],"names":["React","data","http","Cric","name","request","response","fetch","parsedBody","json"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,MAAMC,IAAI,GAAGC,IAAI,CACf,4CADe,CAAjB;;AAIA,SAASC,IAAT,GAAgB;AAEd,QAAMC,IAAI,GAAG,iBAAb;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,CADK,CAAP;AAGD;;AAID,OAAO,eAAeF,IAAf,CACLG,OADK,EAEqB;AAC1B,QAAMC,QAAyB,GAAG,MAAMC,KAAK,CAC3CF,OAD2C,CAA7C;AAGAC,EAAAA,QAAQ,CAACE,UAAT,GAAsB,MAAMF,QAAQ,CAACG,IAAT,EAA5B;AACA,SAAOH,QAAP;AACD,C,CAED;;AACA,MAAMA,QAAQ,GAAG,MAAMJ,IAAI,CACzB,4CADyB,CAA3B;AAIA,eAAeC,IAAf","sourcesContent":["import * as React from 'react';\nconst data = http(\n  \"https://jsonplaceholder.typicode.com/todos\"\n);\n\nfunction Cric() {\n\n  const name = \"Shashank Saxena\"\n  return <div>\n    <h1>{name}</h1>\n  </div>\n}\ninterface HttpResponse<T> extends Response {\n  parsedBody?: T;\n}\nexport async function http<T>(\n  request: RequestInfo\n): Promise<HttpResponse<T>> {\n  const response: HttpResponse<T> = await fetch(\n    request\n  );\n  response.parsedBody = await response.json();\n  return response;\n}\n\n// example consuming code\nconst response = await http<Todo[]>(\n  \"https://jsonplaceholder.typicode.com/todos\"\n);\n\nexport default Cric;"]},"metadata":{},"sourceType":"module"}