{"ast":null,"code":"var _jsxFileName = \"/Users/shashank.saxena/Documents/react app/reactfirstproject/src/CrciState.tsx\";\nimport * as React from 'react';\nimport ScoreCard from './ScoreCard';\n\nclass CrciState extends React.Component {\n  handleclick() {\n    getscore().then(result => {\n      console.log(\"Results :\", result.matches[0].date);\n      let teams = [];\n      let Twenty20Matches = [];\n      result.matches.map(s => {\n        if (s[\"type\"] == \"Twenty20\") {\n          teams.push(JSON.stringify(s));\n        }\n      });\n      console.log(\"Teams :\" + teams);\n      teams.forEach(t => {\n        var team = JSON.parse(t);\n\n        if (team[\"type\"] == \"Twenty20\") {\n          Twenty20Matches.push(team[\"team-1\"] + \" VS \" + team[\"team-2\"]);\n        }\n      });\n      this.setState({\n        count: teams\n      });\n      return result.matches;\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleclick = this.handleclick.bind(this);\n    this.state = {\n      count: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \" Matches \"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, this.state.count.map(value => {\n      if (value) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 22\n          }\n        }, \" \", value, /*#__PURE__*/React.createElement(ScoreCard, {\n          id: JSON.parse(JSON.stringify(value)).unique_id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }\n        }));\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleclick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \" Get Matches \"));\n  }\n\n}\n\nexport const getscore = async () => {\n  var val;\n  const endpoint = `https://cricapi.com/api/matches?apikey=UY8BE0Sq46gdOnLNp97cfVa29pA2`;\n  const data = await (await fetch(endpoint)).json().then(data => {\n    val = data;\n  });\n  return val;\n};\nexport default CrciState;","map":{"version":3,"sources":["/Users/shashank.saxena/Documents/react app/reactfirstproject/src/CrciState.tsx"],"names":["React","ScoreCard","CrciState","Component","handleclick","getscore","then","result","console","log","matches","date","teams","Twenty20Matches","map","s","push","JSON","stringify","forEach","t","team","parse","setState","count","constructor","props","bind","state","render","value","unique_id","val","endpoint","data","fetch","json"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAA4D;AAE1DC,EAAAA,WAAW,GAAG;AACZC,IAAAA,QAAQ,GAAGC,IAAX,CAAiBC,MAAD,IAAY;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,MAAM,CAACG,OAAP,CAAe,CAAf,EAAkBC,IAA3C;AACA,UAAIC,KAAY,GAAG,EAAnB;AACA,UAAIC,eAAe,GAAG,EAAtB;AAEAN,MAAAA,MAAM,CAACG,OAAP,CAAeI,GAAf,CAAoBC,CAAD,IAAY;AAC7B,YAAIA,CAAC,CAAC,MAAD,CAAD,IAAa,UAAjB,EAA6B;AAC3BH,UAAAA,KAAK,CAACI,IAAN,CAAYC,IAAI,CAACC,SAAL,CAAeH,CAAf,CAAZ;AACD;AACA,OAJH;AAMAP,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYG,KAAxB;AAEAA,MAAAA,KAAK,CAACO,OAAN,CAAeC,CAAD,IAAO;AACnB,YAAIC,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWF,CAAX,CAAX;;AACA,YAAGC,IAAI,CAAC,MAAD,CAAJ,IAAgB,UAAnB,EAA+B;AAC7BR,UAAAA,eAAe,CAACG,IAAhB,CAAqBK,IAAI,CAAC,QAAD,CAAJ,GAAiB,MAAjB,GAA0BA,IAAI,CAAC,QAAD,CAAnD;AACD;AAEF,OAND;AAQA,WAAKE,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEZ;AAAT,OAAd;AACA,aAAOL,MAAM,CAACG,OAAd;AACD,KAvBD;AAyBD;;AAGDe,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;AAEA,SAAKtB,WAAL,GAAmB,KAAKA,WAAL,CAAiBuB,IAAjB,CAAsB,IAAtB,CAAnB;AAEA,SAAKC,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAG;AADG,KAAb;AAID;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWJ,KAAX,CAAiBV,GAAjB,CAAsBgB,KAAD,IAAuB;AAC3C,UAAIA,KAAJ,EAAW;AACT,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAMA,KAAN,eACL,oBAAC,SAAD;AAAW,UAAA,EAAE,EAAEb,IAAI,CAACK,KAAL,CAAWL,IAAI,CAACC,SAAL,CAAeY,KAAf,CAAX,EAAkCC,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAGD;AACN,KANI,CADH,CAFF,eAYE;AAAQ,MAAA,OAAO,EAAE,KAAK3B,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAZF,CADF;AAgBD;;AA3DyD;;AA+D5D,OAAO,MAAMC,QAAQ,GAAG,YAA0B;AAChD,MAAI2B,GAAJ;AACA,QAAMC,QAAQ,GAAI,qEAAlB;AACA,QAAMC,IAAI,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,GAA+B9B,IAA/B,CAAqC4B,IAAD,IAAU;AACjEF,IAAAA,GAAG,GAAGE,IAAN;AACC,GAFkB,CAAnB;AAGA,SAAOF,GAAP;AACD,CAPM;AASP,eAAe9B,SAAf","sourcesContent":["import * as React from 'react';\nimport ScoreCard from './ScoreCard';\n\n\nclass CrciState extends React.Component<{}, { count: any }> {\n  \n  handleclick() {\n    getscore().then((result) => {\n      console.log(\"Results :\", result.matches[0].date);\n      let teams: any[] = [];\n      let Twenty20Matches = [];\n\n      result.matches.map((s: any) => {\n        if (s[\"type\"] == \"Twenty20\") {\n          teams.push((JSON.stringify(s)));\n        }\n        })\n\n      console.log(\"Teams :\" + teams);\n\n      teams.forEach((t) => {\n        var team = JSON.parse(t);\n        if(team[\"type\"] == \"Twenty20\") { \n          Twenty20Matches.push(team[\"team-1\"] + \" VS \" + team[\"team-2\"]);\n        }\n\n      })\n\n      this.setState({ count: teams })\n      return result.matches;\n    })  \n  \n  }\n\n\n  constructor(props: any) {\n    super(props);\n\n    this.handleclick = this.handleclick.bind(this)\n\n    this.state = {\n      count : [\n  ]\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1> Matches </h1>\n        <ul>\n          {this.state.count.map((value: {} | null ) => {\n            if (value) {\n              return <li> {value}\n                <ScoreCard id={JSON.parse(JSON.stringify(value)).unique_id} />\n              </li>\n            }\n      })}\n        </ul>\n        \n        <button onClick={this.handleclick} > Get Matches </button>\n      </div>\n    )\n  }\n}\n\n\nexport const getscore = async (): Promise<any> => {\n  var val;\n  const endpoint = `https://cricapi.com/api/matches?apikey=UY8BE0Sq46gdOnLNp97cfVa29pA2`;\n  const data = await (await fetch(endpoint)).json().then((data) => { \n  val = data;\n  })\n  return val;\n}\n\nexport default CrciState"]},"metadata":{},"sourceType":"module"}