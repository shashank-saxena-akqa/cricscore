{"ast":null,"code":"var _jsxFileName = \"/Users/shashank.saxena/Documents/react app/reactfirstproject/src/CrciState.tsx\";\nimport * as React from 'react';\n\nclass CrciState extends React.Component {\n  handleclick() {\n    var test;\n    getscore().then(result => {\n      console.log(\"Result :\", result);\n      test = result.matches;\n      let teams = [];\n      let title = \"\";\n\n      for (var key of Object.keys(test)) {\n        if (key === \"team-1\") title = title + \" \" + test[key];\n        if (key === \"team-2\") title = title + \" VS \" + test[key];\n        teams.push(title);\n      }\n\n      this.setState({\n        count: teams\n      });\n      return result.matches;\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleclick = this.handleclick.bind(this);\n    this.state = {\n      count: [\"red\", \"green\", \"yellow\", \"blue\", \"purple\", \"brown\", \"orange\", \"pink\", \"aqua\", \"lime\"]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \" Matches \"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, this.state.count.map(value => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }\n      }, \" \", value, \" \");\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleclick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \" Get Matches \"));\n  }\n\n}\n\nexport const getscore = async () => {\n  var val;\n  const endpoint = `https://cricapi.com/api/matches?apikey=UY8BE0Sq46gdOnLNp97cfVa29pA2`;\n  const data = await (await fetch(endpoint)).json().then(data => {\n    val = data;\n  });\n  return val;\n};\nexport default CrciState;","map":{"version":3,"sources":["/Users/shashank.saxena/Documents/react app/reactfirstproject/src/CrciState.tsx"],"names":["React","CrciState","Component","handleclick","test","getscore","then","result","console","log","matches","teams","title","key","Object","keys","push","setState","count","constructor","props","bind","state","render","map","value","val","endpoint","data","fetch","json"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAA4D;AAE1DC,EAAAA,WAAW,GAAG;AACZ,QAAIC,IAAJ;AACAC,IAAAA,QAAQ,GAAGC,IAAX,CAAiBC,MAAD,IAAY;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AACAH,MAAAA,IAAI,GAAGG,MAAM,CAACG,OAAd;AACA,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIC,GAAT,IAAgBC,MAAM,CAACC,IAAP,CAAYX,IAAZ,CAAhB,EAAmC;AACjC,YAAIS,GAAG,KAAK,QAAZ,EACID,KAAK,GAAGA,KAAK,GAAG,GAAR,GAAcR,IAAI,CAACS,GAAD,CAA1B;AACJ,YAAIA,GAAG,KAAK,QAAZ,EACED,KAAK,GAAGA,KAAK,GAAG,MAAR,GAAiBR,IAAI,CAACS,GAAD,CAA7B;AACFF,QAAAA,KAAK,CAACK,IAAN,CAAWJ,KAAX;AACP;;AAEK,WAAKK,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEP;AAAT,OAAd;AACA,aAAOJ,MAAM,CAACG,OAAd;AACD,KAfD;AAiBD;;AAGDS,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;AAEA,SAAKjB,WAAL,GAAmB,KAAKA,WAAL,CAAiBkB,IAAjB,CAAsB,IAAtB,CAAnB;AAEA,SAAKC,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAG,CACV,KADU,EAEV,OAFU,EAGV,QAHU,EAIV,MAJU,EAKV,QALU,EAMV,OANU,EAOV,QAPU,EAQV,MARU,EASV,MATU,EAUV,MAVU;AADG,KAAb;AAcD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD,KAAKD,KAAL,CAAWJ,KAAX,CAAiBM,GAAjB,CAAsBC,KAAD,IAAkC;AACtD,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAMA,KAAN,MAAP;AACD,KAFA,CADC,CALF,eAYE;AAAQ,MAAA,OAAO,EAAE,KAAKtB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAZF,CADF;AAgBD;;AA9DyD;;AAkE5D,OAAO,MAAME,QAAQ,GAAG,YAA0B;AAChD,MAAIqB,GAAJ;AACA,QAAMC,QAAQ,GAAI,qEAAlB;AACA,QAAMC,IAAI,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,GAA+BxB,IAA/B,CAAqCsB,IAAD,IAAU;AACjEF,IAAAA,GAAG,GAAGE,IAAN;AACC,GAFkB,CAAnB;AAGA,SAAOF,GAAP;AACD,CAPM;AASP,eAAezB,SAAf","sourcesContent":["import * as React from 'react';\n\nclass CrciState extends React.Component<{}, { count: any }> {\n  \n  handleclick() {\n    var test;\n    getscore().then((result) => {\n      console.log(\"Result :\", result);\n      test = result.matches;\n      let teams = [];\n      let title = \"\";\n      for (var key of Object.keys(test)) {\n        if (key === \"team-1\")\n            title = title + \" \" + test[key];\n        if (key === \"team-2\")\n          title = title + \" VS \" + test[key];\n        teams.push(title);\n}\n\n      this.setState({ count: teams })\n      return result.matches;\n    })  \n  \n  }\n\n\n  constructor(props: any) {\n    super(props);\n\n    this.handleclick = this.handleclick.bind(this)\n\n    this.state = {\n      count : [\n    \"red\",\n    \"green\",\n    \"yellow\",\n    \"blue\",\n    \"purple\",\n    \"brown\",\n    \"orange\",\n    \"pink\",\n    \"aqua\",\n    \"lime\"\n  ]\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1> Matches </h1>\n        {/* <h1> {this.state.count} </h1> */}\n\n\n        <ul>\n      {this.state.count.map((value: {} | null | undefined) => {\n        return <li> {value} </li>\n      })}\n        </ul>\n\n\n        <button onClick={this.handleclick} > Get Matches </button>\n      </div>\n    )\n  }\n}\n\n\nexport const getscore = async (): Promise<any> => {\n  var val;\n  const endpoint = `https://cricapi.com/api/matches?apikey=UY8BE0Sq46gdOnLNp97cfVa29pA2`;\n  const data = await (await fetch(endpoint)).json().then((data) => { \n  val = data;\n  })\n  return val;\n}\n\nexport default CrciState"]},"metadata":{},"sourceType":"module"}